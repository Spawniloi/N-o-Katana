import pygame
import sys

# Initialiser Pygame
pygame.init()

# Constantes de la fenêtre
WIDTH, HEIGHT = 800, 600
WIN = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Collision Joueur-Mur")

# Couleurs
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)

# Classe Joueur
class Player(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.Surface((50, 50))
        self.image.fill(RED)
        self.rect = self.image.get_rect()
        self.rect.topleft = (100, 100)
        self.speed = 5

    def update(self, walls):
        keys = pygame.key.get_pressed()
        dx = dy = 0

        if keys[pygame.K_LEFT]:
            dx = -self.speed
        if keys[pygame.K_RIGHT]:
            dx = self.speed
        if keys[pygame.K_UP]:
            dy = -self.speed
        if keys[pygame.K_DOWN]:
            dy = self.speed

        # Mise à jour de la position horizontale
        self.rect.x += dx
        if pygame.sprite.spritecollide(self, walls, False):
            self.rect.x -= dx

        # Mise à jour de la position verticale
        self.rect.y += dy
        if pygame.sprite.spritecollide(self, walls, False):
            self.rect.y -= dy

# Classe Mur
class Wall(pygame.sprite.Sprite):
    def __init__(self, x, y, width, height):
        super().__init__()
        self.image = pygame.Surface((width, height))
        self.image.fill(BLACK)
        self.rect = self.image.get_rect()
        self.rect.topleft = (x, y)

# Création des groupes de sprites
player = Player()
walls = pygame.sprite.Group()

# Création des murs
walls.add(Wall(300, 150, 200, 50))  # Ex: mur à la position (300, 150) avec une taille de (200, 50)
walls.add(Wall(100, 300, 50, 200))  # Un autre exemple de mur

# Groupe de tous les sprites
all_sprites = pygame.sprite.Group()
all_sprites.add(player)
all_sprites.add(walls)

# Boucle de jeu principale
clock = pygame.time.Clock()

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    # Mettre à jour les sprites
    player.update(walls)

    # Dessiner tout
    WIN.fill(WHITE)
    all_sprites.draw(WIN)
    pygame.display.flip()

    # Limiter la vitesse de la boucle
    clock.tick(60)
